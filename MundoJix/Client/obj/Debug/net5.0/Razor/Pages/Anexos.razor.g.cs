#pragma checksum "C:\Users\rapha\source\repos\MundoJix\MundoJix\Client\Pages\Anexos.razor" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "72ba85a1842709f6f006aa01d4109741c08a62af"
// <auto-generated/>
#pragma warning disable 1591
namespace MundoJix.Client.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "C:\Users\rapha\source\repos\MundoJix\MundoJix\Client\_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\rapha\source\repos\MundoJix\MundoJix\Client\_Imports.razor"
using System.Net.Http.Json;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\rapha\source\repos\MundoJix\MundoJix\Client\_Imports.razor"
using Microsoft.AspNetCore.Components.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Users\rapha\source\repos\MundoJix\MundoJix\Client\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "C:\Users\rapha\source\repos\MundoJix\MundoJix\Client\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "C:\Users\rapha\source\repos\MundoJix\MundoJix\Client\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "C:\Users\rapha\source\repos\MundoJix\MundoJix\Client\_Imports.razor"
using Microsoft.AspNetCore.Components.Web.Virtualization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "C:\Users\rapha\source\repos\MundoJix\MundoJix\Client\_Imports.razor"
using Microsoft.AspNetCore.Components.WebAssembly.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "C:\Users\rapha\source\repos\MundoJix\MundoJix\Client\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "C:\Users\rapha\source\repos\MundoJix\MundoJix\Client\_Imports.razor"
using MundoJix.Client;

#line default
#line hidden
#nullable disable
#nullable restore
#line 11 "C:\Users\rapha\source\repos\MundoJix\MundoJix\Client\_Imports.razor"
using MundoJix.Client.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 12 "C:\Users\rapha\source\repos\MundoJix\MundoJix\Client\_Imports.razor"
using Microsoft.AspNetCore.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 13 "C:\Users\rapha\source\repos\MundoJix\MundoJix\Client\_Imports.razor"
using Microsoft.AspNetCore.Components.WebAssembly.Hosting;

#line default
#line hidden
#nullable disable
#nullable restore
#line 14 "C:\Users\rapha\source\repos\MundoJix\MundoJix\Client\_Imports.razor"
using System.IO;

#line default
#line hidden
#nullable disable
#nullable restore
#line 15 "C:\Users\rapha\source\repos\MundoJix\MundoJix\Client\_Imports.razor"
using Microsoft.Extensions.Configuration;

#line default
#line hidden
#nullable disable
#nullable restore
#line 17 "C:\Users\rapha\source\repos\MundoJix\MundoJix\Client\_Imports.razor"
using Radzen;

#line default
#line hidden
#nullable disable
#nullable restore
#line 18 "C:\Users\rapha\source\repos\MundoJix\MundoJix\Client\_Imports.razor"
using Radzen.Blazor;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Users\rapha\source\repos\MundoJix\MundoJix\Client\Pages\Anexos.razor"
using MundoJix.Shared.Models;

#line default
#line hidden
#nullable disable
    [Microsoft.AspNetCore.Components.RouteAttribute("/largefiles")]
    public partial class Anexos : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
            __builder.AddMarkupContent(0, "<h3>Upload photo</h3>");
#nullable restore
#line 7 "C:\Users\rapha\source\repos\MundoJix\MundoJix\Client\Pages\Anexos.razor"
 if (ImageUrl != "")
{

#line default
#line hidden
#nullable disable
            __builder.OpenElement(1, "img");
            __builder.AddAttribute(2, "src", 
#nullable restore
#line 9 "C:\Users\rapha\source\repos\MundoJix\MundoJix\Client\Pages\Anexos.razor"
               ImageUrl

#line default
#line hidden
#nullable disable
            );
            __builder.CloseElement();
            __builder.AddMarkupContent(3, "\r\n    <br>\r\n    <br>");
#nullable restore
#line 12 "C:\Users\rapha\source\repos\MundoJix\MundoJix\Client\Pages\Anexos.razor"
}

#line default
#line hidden
#nullable disable
            __builder.OpenElement(4, "div");
            __builder.AddAttribute(5, "class", "dropArea" + " " + (
#nullable restore
#line 13 "C:\Users\rapha\source\repos\MundoJix\MundoJix\Client\Pages\Anexos.razor"
                      dropClass

#line default
#line hidden
#nullable disable
            ));
            __builder.AddMarkupContent(6, "\r\n    Drag and drop photo, or click to select a local file.\r\n    ");
            __builder.OpenComponent<Microsoft.AspNetCore.Components.Forms.InputFile>(7);
            __builder.AddAttribute(8, "disabled", 
#nullable restore
#line 15 "C:\Users\rapha\source\repos\MundoJix\MundoJix\Client\Pages\Anexos.razor"
                          Uploading

#line default
#line hidden
#nullable disable
            );
            __builder.AddAttribute(9, "OnChange", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Forms.InputFileChangeEventArgs>>(Microsoft.AspNetCore.Components.EventCallback.Factory.Create<Microsoft.AspNetCore.Components.Forms.InputFileChangeEventArgs>(this, 
#nullable restore
#line 16 "C:\Users\rapha\source\repos\MundoJix\MundoJix\Client\Pages\Anexos.razor"
                         OnInputFileChange

#line default
#line hidden
#nullable disable
            )));
            __builder.AddAttribute(10, "ondragenter", Microsoft.AspNetCore.Components.EventCallback.Factory.Create<Microsoft.AspNetCore.Components.Web.DragEventArgs>(this, 
#nullable restore
#line 17 "C:\Users\rapha\source\repos\MundoJix\MundoJix\Client\Pages\Anexos.razor"
                             HandleDragEnter

#line default
#line hidden
#nullable disable
            ));
            __builder.AddAttribute(11, "ondragleave", Microsoft.AspNetCore.Components.EventCallback.Factory.Create<Microsoft.AspNetCore.Components.Web.DragEventArgs>(this, 
#nullable restore
#line 18 "C:\Users\rapha\source\repos\MundoJix\MundoJix\Client\Pages\Anexos.razor"
                             HandleDragLeave

#line default
#line hidden
#nullable disable
            ));
            __builder.CloseComponent();
            __builder.CloseElement();
            __builder.AddMarkupContent(12, "\r\n<br>\r\n\r\n");
            __builder.AddMarkupContent(13, "<h3>Upload large file in chunks</h3>\r\n\r\n");
            __builder.OpenElement(14, "div");
            __builder.AddAttribute(15, "class", "dropArea" + " " + (
#nullable restore
#line 24 "C:\Users\rapha\source\repos\MundoJix\MundoJix\Client\Pages\Anexos.razor"
                      dropClass

#line default
#line hidden
#nullable disable
            ));
            __builder.AddMarkupContent(16, "\r\n    Drag and drop a very large file here, or click to select.\r\n    ");
            __builder.OpenComponent<Microsoft.AspNetCore.Components.Forms.InputFile>(17);
            __builder.AddAttribute(18, "disabled", 
#nullable restore
#line 26 "C:\Users\rapha\source\repos\MundoJix\MundoJix\Client\Pages\Anexos.razor"
                          UploadingLargeFile

#line default
#line hidden
#nullable disable
            );
            __builder.AddAttribute(19, "OnChange", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Forms.InputFileChangeEventArgs>>(Microsoft.AspNetCore.Components.EventCallback.Factory.Create<Microsoft.AspNetCore.Components.Forms.InputFileChangeEventArgs>(this, 
#nullable restore
#line 27 "C:\Users\rapha\source\repos\MundoJix\MundoJix\Client\Pages\Anexos.razor"
                         OnLargeFileInputFileChange

#line default
#line hidden
#nullable disable
            )));
            __builder.AddAttribute(20, "ondragenter", Microsoft.AspNetCore.Components.EventCallback.Factory.Create<Microsoft.AspNetCore.Components.Web.DragEventArgs>(this, 
#nullable restore
#line 28 "C:\Users\rapha\source\repos\MundoJix\MundoJix\Client\Pages\Anexos.razor"
                             HandleDragEnter

#line default
#line hidden
#nullable disable
            ));
            __builder.AddAttribute(21, "ondragleave", Microsoft.AspNetCore.Components.EventCallback.Factory.Create<Microsoft.AspNetCore.Components.Web.DragEventArgs>(this, 
#nullable restore
#line 29 "C:\Users\rapha\source\repos\MundoJix\MundoJix\Client\Pages\Anexos.razor"
                             HandleDragLeave

#line default
#line hidden
#nullable disable
            ));
            __builder.CloseComponent();
            __builder.CloseElement();
            __builder.AddMarkupContent(22, "\r\n\r\n");
            __builder.OpenElement(23, "div");
            __builder.AddContent(24, 
#nullable restore
#line 32 "C:\Users\rapha\source\repos\MundoJix\MundoJix\Client\Pages\Anexos.razor"
      LargeUploadMessage

#line default
#line hidden
#nullable disable
            );
            __builder.CloseElement();
#nullable restore
#line 33 "C:\Users\rapha\source\repos\MundoJix\MundoJix\Client\Pages\Anexos.razor"
 if (UploadingLargeFile)
{

#line default
#line hidden
#nullable disable
            __builder.OpenElement(25, "progress");
            __builder.AddAttribute(26, "style", "height:50px;width:100%;");
            __builder.AddAttribute(27, "value", 
#nullable restore
#line 35 "C:\Users\rapha\source\repos\MundoJix\MundoJix\Client\Pages\Anexos.razor"
                                                      UploadedBytes

#line default
#line hidden
#nullable disable
            );
            __builder.AddAttribute(28, "max", 
#nullable restore
#line 35 "C:\Users\rapha\source\repos\MundoJix\MundoJix\Client\Pages\Anexos.razor"
                                                                           TotalBytes

#line default
#line hidden
#nullable disable
            );
            __builder.CloseElement();
#nullable restore
#line 36 "C:\Users\rapha\source\repos\MundoJix\MundoJix\Client\Pages\Anexos.razor"
}

#line default
#line hidden
#nullable disable
            __builder.AddMarkupContent(29, "<br>\r\n");
            __builder.AddMarkupContent(30, "<h3>Files</h3>\r\n");
            __builder.OpenElement(31, "ul");
#nullable restore
#line 40 "C:\Users\rapha\source\repos\MundoJix\MundoJix\Client\Pages\Anexos.razor"
     foreach (var url in FileUrls)
    {

#line default
#line hidden
#nullable disable
            __builder.OpenElement(32, "li");
            __builder.OpenElement(33, "a");
            __builder.AddAttribute(34, "href", 
#nullable restore
#line 42 "C:\Users\rapha\source\repos\MundoJix\MundoJix\Client\Pages\Anexos.razor"
                      url

#line default
#line hidden
#nullable disable
            );
            __builder.AddContent(35, 
#nullable restore
#line 42 "C:\Users\rapha\source\repos\MundoJix\MundoJix\Client\Pages\Anexos.razor"
                            url

#line default
#line hidden
#nullable disable
            );
            __builder.CloseElement();
            __builder.AddMarkupContent(36, "<br>");
            __builder.CloseElement();
#nullable restore
#line 43 "C:\Users\rapha\source\repos\MundoJix\MundoJix\Client\Pages\Anexos.razor"
    }

#line default
#line hidden
#nullable disable
            __builder.CloseElement();
        }
        #pragma warning restore 1998
#nullable restore
#line 46 "C:\Users\rapha\source\repos\MundoJix\MundoJix\Client\Pages\Anexos.razor"
 


        string ImageUrl = "";
        bool Uploading = false;

        bool UploadingLargeFile = false;
        string LargeUploadMessage = "";
        long UploadedBytes;
        long TotalBytes;
        List<string> FileUrls = new List<string>();
        List<MundoJix.Shared.Models.Aluno> alunos;

        // support for drag/drop
        string dropClass = string.Empty;
        void HandleDragEnter()
        {
            dropClass = "dropAreaDrug";
        }
        void HandleDragLeave()
        {
            dropClass = string.Empty;
        }

        /// <summary>
        /// Occurs when a large file is selected or dropped
        /// </summary>
        /// <param name="args"></param>
        /// <returns></returns>
        async Task OnLargeFileInputFileChange(InputFileChangeEventArgs args)
        {
            UploadedBytes = 0;

            // Disable the file input field
            UploadingLargeFile = true;
            await InvokeAsync(StateHasChanged);

            // calculate the chunks we have to send
            TotalBytes = args.File.Size;
            long percent = 0;
            long chunkSize = 400000; // fairly arbitrary
            long numChunks = TotalBytes / chunkSize;
            long remainder = TotalBytes % chunkSize;

            // get new filename with a bit of entropy
            string justFileName = Path.GetFileNameWithoutExtension(args.File.Name);
            var extension = Path.GetExtension(args.File.Name);
            string newFileNameWithoutPath = $"{justFileName}-{DateTime.Now.Ticks.ToString()}{extension}";

            bool firstChunk = true;

            // Open the input and output file streams
            using (var inStream = args.File.OpenReadStream(long.MaxValue))
            {
                for (int i = 0; i < numChunks; i++)
                {
                    // Read the next chunk
                    var buffer = new byte[chunkSize];
                    await inStream.ReadAsync(buffer, 0, buffer.Length);

                    // create the FileChunk object
                    var chunk = new FileChunk
                    {
                        Data = buffer,
                        FileNameNoPath = newFileNameWithoutPath,
                        Offset = UploadedBytes,
                        FirstChunk = firstChunk,
                     

                };

                // upload this chunk
                await FilesManager.UploadFileChunk(chunk);


                firstChunk = false; // no longer the first chunk

                // Update our progress data and UI
                UploadedBytes += chunkSize;
                percent = UploadedBytes * 100 / TotalBytes;
                // Report progress with a string
                LargeUploadMessage = $"Uploading {args.File.Name} {percent}%";
                await InvokeAsync(StateHasChanged);
            }

            if (remainder > 0)
            {
                // Same stuff as above, just with the leftover chunk data
                var buffer = new byte[remainder];
                await inStream.ReadAsync(buffer, 0, buffer.Length);

                // create the FileChunk object
                var chunk = new FileChunk
                {
                    Data = buffer,
                    FileNameNoPath = newFileNameWithoutPath,
                    Offset = UploadedBytes,
                    FirstChunk = firstChunk
                };

                // upload this chunk
                await FilesManager.UploadFileChunk(chunk);

                UploadedBytes += remainder;
                percent = UploadedBytes * 100 / TotalBytes;
                LargeUploadMessage = $"Uploading {args.File.Name} {percent}%";
                await InvokeAsync(StateHasChanged);
            }
        }

        LargeUploadMessage = "Upload Complete.";
        await ListFiles();

        UploadingLargeFile = false;
    }

    async Task OnInputFileChange(InputFileChangeEventArgs args)
    {
        dropClass = string.Empty;

        try
        {
            // disable the upload pane
            Uploading = true;
            await InvokeAsync(StateHasChanged);

            // Resize to no more than 400x400
            var format = "image/png/pdf";
            var resizedImageFile = await args.File.RequestImageFileAsync(format, 400, 400);

            // read resized png data into a buffer
            var buffer = new byte[resizedImageFile.Size];
            await resizedImageFile.OpenReadStream().ReadAsync(buffer);

            // get new filename with a bit of entropy
            string justFileName = Path.GetFileNameWithoutExtension(args.File.Name);
            string newFileNameWithoutPath = $"{justFileName}-{DateTime.Now.Ticks.ToString()}.png";
            string fileName = $"{Environment.CurrentDirectory}\\files\\{newFileNameWithoutPath}";

            // upload png as one file chunk
            var chunk = new FileChunk
            {
                Data = buffer,
                FileNameNoPath = newFileNameWithoutPath,
                Offset = 0,
                FirstChunk = true
            };

            await FilesManager.UploadFileChunk(chunk);

            ImageUrl = $"files/{newFileNameWithoutPath}";

            await ListFiles();

            Uploading = false;

        }
        catch (Exception ex)
        {
            Uploading = false;
            await InvokeAsync(StateHasChanged);
            System.Diagnostics.Debug.WriteLine(ex.Message);
            throw;
        }
    }

    async Task ListFiles()
    {
        FileUrls = await FilesManager.GetFileNames();
        await InvokeAsync(StateHasChanged);
    }

    protected override async Task OnInitializedAsync()
    {
        await ListFiles();
    }


#line default
#line hidden
#nullable disable
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private HttpClient http { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private FilesManager FilesManager { get; set; }
    }
}
#pragma warning restore 1591
