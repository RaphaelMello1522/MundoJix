#pragma checksum "C:\Users\rapha\source\repos\MundoJix\MundoJix\Client\Pages\Aluno\ListarAluno.razor" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "c8e8ef9e10bf229f991a77810e9d63577c9090d4"
// <auto-generated/>
#pragma warning disable 1591
namespace MundoJix.Client.Pages.Aluno
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "C:\Users\rapha\source\repos\MundoJix\MundoJix\Client\_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\rapha\source\repos\MundoJix\MundoJix\Client\_Imports.razor"
using System.Net.Http.Json;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\rapha\source\repos\MundoJix\MundoJix\Client\_Imports.razor"
using Microsoft.AspNetCore.Components.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Users\rapha\source\repos\MundoJix\MundoJix\Client\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "C:\Users\rapha\source\repos\MundoJix\MundoJix\Client\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "C:\Users\rapha\source\repos\MundoJix\MundoJix\Client\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "C:\Users\rapha\source\repos\MundoJix\MundoJix\Client\_Imports.razor"
using Microsoft.AspNetCore.Components.Web.Virtualization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "C:\Users\rapha\source\repos\MundoJix\MundoJix\Client\_Imports.razor"
using Microsoft.AspNetCore.Components.WebAssembly.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "C:\Users\rapha\source\repos\MundoJix\MundoJix\Client\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "C:\Users\rapha\source\repos\MundoJix\MundoJix\Client\_Imports.razor"
using MundoJix.Client;

#line default
#line hidden
#nullable disable
#nullable restore
#line 11 "C:\Users\rapha\source\repos\MundoJix\MundoJix\Client\_Imports.razor"
using MundoJix.Client.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 12 "C:\Users\rapha\source\repos\MundoJix\MundoJix\Client\_Imports.razor"
using Microsoft.AspNetCore.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 13 "C:\Users\rapha\source\repos\MundoJix\MundoJix\Client\_Imports.razor"
using Microsoft.AspNetCore.Components.WebAssembly.Hosting;

#line default
#line hidden
#nullable disable
#nullable restore
#line 14 "C:\Users\rapha\source\repos\MundoJix\MundoJix\Client\_Imports.razor"
using System.IO;

#line default
#line hidden
#nullable disable
#nullable restore
#line 15 "C:\Users\rapha\source\repos\MundoJix\MundoJix\Client\_Imports.razor"
using Microsoft.Extensions.Configuration;

#line default
#line hidden
#nullable disable
#nullable restore
#line 17 "C:\Users\rapha\source\repos\MundoJix\MundoJix\Client\_Imports.razor"
using Radzen;

#line default
#line hidden
#nullable disable
#nullable restore
#line 18 "C:\Users\rapha\source\repos\MundoJix\MundoJix\Client\_Imports.razor"
using Radzen.Blazor;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "C:\Users\rapha\source\repos\MundoJix\MundoJix\Client\Pages\Aluno\ListarAluno.razor"
using MundoJix.Shared.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "C:\Users\rapha\source\repos\MundoJix\MundoJix\Client\Pages\Aluno\ListarAluno.razor"
using System.Text.Json;

#line default
#line hidden
#nullable disable
#nullable restore
#line 65 "C:\Users\rapha\source\repos\MundoJix\MundoJix\Client\Pages\Aluno\ListarAluno.razor"
using MundoJix.Shared.Models;

#line default
#line hidden
#nullable disable
    [Microsoft.AspNetCore.Components.RouteAttribute("/aluno/lista")]
    [Microsoft.AspNetCore.Components.RouteAttribute("/aluno")]
    public partial class ListarAluno : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
            __builder.AddMarkupContent(0, "<h3>Lista de Alunos</h3>\r\n\r\n");
            __builder.AddMarkupContent(1, "<div><a href=\"aluno/criar\" class=\"btn btn-secondary\">Cadastrar Novo Aluno</a></div>\r\n\r\n");
            __builder.OpenElement(2, "div");
#nullable restore
#line 15 "C:\Users\rapha\source\repos\MundoJix\MundoJix\Client\Pages\Aluno\ListarAluno.razor"
     if (alunos == null)
    {
        

#line default
#line hidden
#nullable disable
            __builder.AddContent(3, "Carregando...");
#nullable restore
#line 17 "C:\Users\rapha\source\repos\MundoJix\MundoJix\Client\Pages\Aluno\ListarAluno.razor"
                                  
    }
    else if (alunos.Count == 0)
    {
        

#line default
#line hidden
#nullable disable
            __builder.AddMarkupContent(4, "Não há nenhum aluno registrado no sistema.");
#nullable restore
#line 21 "C:\Users\rapha\source\repos\MundoJix\MundoJix\Client\Pages\Aluno\ListarAluno.razor"
                                                               
    }
    else
    {



#line default
#line hidden
#nullable disable
            __builder.OpenElement(5, "table");
            __builder.AddAttribute(6, "class", "table-bordered");
            __builder.AddMarkupContent(7, "<thead><tr><th>Nome</th>\r\n                    <th>RA</th>\r\n                    <th>Curso</th></tr></thead>\r\n            ");
            __builder.OpenElement(8, "tbody");
#nullable restore
#line 36 "C:\Users\rapha\source\repos\MundoJix\MundoJix\Client\Pages\Aluno\ListarAluno.razor"
                 foreach (var aluno in alunos)
                {

#line default
#line hidden
#nullable disable
            __builder.OpenElement(9, "tr");
            __builder.OpenElement(10, "td");
            __builder.AddContent(11, 
#nullable restore
#line 39 "C:\Users\rapha\source\repos\MundoJix\MundoJix\Client\Pages\Aluno\ListarAluno.razor"
                         aluno.Nome

#line default
#line hidden
#nullable disable
            );
            __builder.CloseElement();
            __builder.AddMarkupContent(12, "\r\n                    ");
            __builder.OpenElement(13, "td");
            __builder.AddContent(14, 
#nullable restore
#line 40 "C:\Users\rapha\source\repos\MundoJix\MundoJix\Client\Pages\Aluno\ListarAluno.razor"
                         aluno.RA

#line default
#line hidden
#nullable disable
            );
            __builder.CloseElement();
            __builder.AddMarkupContent(15, "\r\n                    ");
            __builder.OpenElement(16, "td");
            __builder.AddContent(17, 
#nullable restore
#line 41 "C:\Users\rapha\source\repos\MundoJix\MundoJix\Client\Pages\Aluno\ListarAluno.razor"
                         aluno.Curso

#line default
#line hidden
#nullable disable
            );
            __builder.CloseElement();
            __builder.AddMarkupContent(18, "\r\n                    ");
            __builder.OpenElement(19, "td");
            __builder.AddContent(20, 
#nullable restore
#line 42 "C:\Users\rapha\source\repos\MundoJix\MundoJix\Client\Pages\Aluno\ListarAluno.razor"
                         aluno.Anexo

#line default
#line hidden
#nullable disable
            );
            __builder.CloseElement();
            __builder.AddMarkupContent(21, "\r\n                    ");
            __builder.OpenElement(22, "td");
            __builder.OpenElement(23, "a");
            __builder.AddAttribute(24, "class", "btn btn-primary");
            __builder.AddAttribute(25, "href", "aluno/editar/" + (
#nullable restore
#line 45 "C:\Users\rapha\source\repos\MundoJix\MundoJix\Client\Pages\Aluno\ListarAluno.razor"
                                                                       aluno.Id

#line default
#line hidden
#nullable disable
            ));
            __builder.AddContent(26, "Editar");
            __builder.CloseElement();
            __builder.AddMarkupContent(27, "\r\n                        ");
            __builder.OpenElement(28, "button");
            __builder.AddAttribute(29, "class", "btn btn-warning");
            __builder.AddAttribute(30, "onclick", Microsoft.AspNetCore.Components.EventCallback.Factory.Create<Microsoft.AspNetCore.Components.Web.MouseEventArgs>(this, 
#nullable restore
#line 46 "C:\Users\rapha\source\repos\MundoJix\MundoJix\Client\Pages\Aluno\ListarAluno.razor"
                                                                    () => ExcluirAluno(aluno.Id)

#line default
#line hidden
#nullable disable
            ));
            __builder.AddContent(31, "Excluir");
            __builder.CloseElement();
            __builder.CloseElement();
            __builder.CloseElement();
#nullable restore
#line 49 "C:\Users\rapha\source\repos\MundoJix\MundoJix\Client\Pages\Aluno\ListarAluno.razor"
                }

#line default
#line hidden
#nullable disable
            __builder.CloseElement();
            __builder.CloseElement();
#nullable restore
#line 52 "C:\Users\rapha\source\repos\MundoJix\MundoJix\Client\Pages\Aluno\ListarAluno.razor"

    }

#line default
#line hidden
#nullable disable
            __builder.CloseElement();
            __builder.AddMarkupContent(32, "\r\n");
            __builder.AddMarkupContent(33, "<h3>Files</h3>\r\n");
            __builder.OpenElement(34, "ul");
#nullable restore
#line 58 "C:\Users\rapha\source\repos\MundoJix\MundoJix\Client\Pages\Aluno\ListarAluno.razor"
     foreach (var url in FileUrls)
    {

#line default
#line hidden
#nullable disable
            __builder.OpenElement(35, "li");
            __builder.OpenElement(36, "a");
            __builder.AddAttribute(37, "href", 
#nullable restore
#line 60 "C:\Users\rapha\source\repos\MundoJix\MundoJix\Client\Pages\Aluno\ListarAluno.razor"
                      url

#line default
#line hidden
#nullable disable
            );
            __builder.AddContent(38, 
#nullable restore
#line 60 "C:\Users\rapha\source\repos\MundoJix\MundoJix\Client\Pages\Aluno\ListarAluno.razor"
                            url

#line default
#line hidden
#nullable disable
            );
            __builder.CloseElement();
            __builder.AddMarkupContent(39, "<br>");
            __builder.CloseElement();
#nullable restore
#line 61 "C:\Users\rapha\source\repos\MundoJix\MundoJix\Client\Pages\Aluno\ListarAluno.razor"
    }

#line default
#line hidden
#nullable disable
            __builder.CloseElement();
        }
        #pragma warning restore 1998
#nullable restore
#line 65 "C:\Users\rapha\source\repos\MundoJix\MundoJix\Client\Pages\Aluno\ListarAluno.razor"
                                 

    List<Aluno> alunos;


    protected override async Task OnInitializedAsync()
    {
        await LoadAlunos();
        await ListFiles();
    }


    async Task LoadAlunos()
    {
        alunos = await http.GetFromJsonAsync<List<Aluno>>($"api/aluno");

    }


    async Task ExcluirAluno(int id)
    {
        await http.DeleteAsync($"api/aluno/{id}");
        await LoadAlunos();
    }


    string ImageUrl = "";
    bool Uploading = false;

    bool UploadingLargeFile = false;
    string LargeUploadMessage = "";
    long UploadedBytes;
    long TotalBytes;
    List<string> FileUrls = new List<string>();

    // support for drag/drop
    string dropClass = string.Empty;
    void HandleDragEnter()
    {
        dropClass = "dropAreaDrug";
    }
    void HandleDragLeave()
    {
        dropClass = string.Empty;
    }

    /// <summary>
    /// Occurs when a large file is selected or dropped
    /// </summary>
    /// <param name="args"></param>
    /// <returns></returns>
    async Task OnLargeFileInputFileChange(InputFileChangeEventArgs args)
    {
        UploadedBytes = 0;

        // Disable the file input field
        UploadingLargeFile = true;
        await InvokeAsync(StateHasChanged);

        // calculate the chunks we have to send
        TotalBytes = args.File.Size;
        long percent = 0;
        long chunkSize = 400000; // fairly arbitrary
        long numChunks = TotalBytes / chunkSize;
        long remainder = TotalBytes % chunkSize;

        // get new filename with a bit of entropy
        string justFileName = Path.GetFileNameWithoutExtension(args.File.Name);
        var extension = Path.GetExtension(args.File.Name);
        string newFileNameWithoutPath = $"{justFileName}-{DateTime.Now.Ticks.ToString()}{extension}";

        bool firstChunk = true;

        // Open the input and output file streams
        using (var inStream = args.File.OpenReadStream(long.MaxValue))
        {
            for (int i = 0; i < numChunks; i++)
            {
                // Read the next chunk
                var buffer = new byte[chunkSize];
                await inStream.ReadAsync(buffer, 0, buffer.Length);

                // create the FileChunk object
                var chunk = new FileChunk
                {
                    Data = buffer,
                    FileNameNoPath = newFileNameWithoutPath,
                    Offset = UploadedBytes,
                    FirstChunk = firstChunk
                };

                // upload this chunk
                await FilesManager.UploadFileChunk(chunk);


                firstChunk = false; // no longer the first chunk

                // Update our progress data and UI
                UploadedBytes += chunkSize;
                percent = UploadedBytes * 100 / TotalBytes;
                // Report progress with a string
                LargeUploadMessage = $"Uploading {args.File.Name} {percent}%";
                await InvokeAsync(StateHasChanged);
            }

            if (remainder > 0)
            {
                // Same stuff as above, just with the leftover chunk data
                var buffer = new byte[remainder];
                await inStream.ReadAsync(buffer, 0, buffer.Length);

                // create the FileChunk object
                var chunk = new FileChunk
                {
                    Data = buffer,
                    FileNameNoPath = newFileNameWithoutPath,
                    Offset = UploadedBytes,
                    FirstChunk = firstChunk
                };

                // upload this chunk
                await FilesManager.UploadFileChunk(chunk);

                UploadedBytes += remainder;
                percent = UploadedBytes * 100 / TotalBytes;
                LargeUploadMessage = $"Uploading {args.File.Name} {percent}%";
                await InvokeAsync(StateHasChanged);
            }
        }

        LargeUploadMessage = "Upload Complete.";
        await ListFiles();

        UploadingLargeFile = false;
    }

    async Task OnInputFileChange(InputFileChangeEventArgs args)
    {
        dropClass = string.Empty;

        try
        {
            // disable the upload pane
            Uploading = true;
            await InvokeAsync(StateHasChanged);

            // Resize to no more than 400x400
            var format = "image/png/pdf";
            var resizedImageFile = await args.File.RequestImageFileAsync(format, 400, 400);

            // read resized png data into a buffer
            var buffer = new byte[resizedImageFile.Size];
            await resizedImageFile.OpenReadStream().ReadAsync(buffer);

            // get new filename with a bit of entropy
            string justFileName = Path.GetFileNameWithoutExtension(args.File.Name);
            string newFileNameWithoutPath = $"{justFileName}-{DateTime.Now.Ticks.ToString()}.png";
            string fileName = $"{Environment.CurrentDirectory}\\files\\{newFileNameWithoutPath}";

            // upload png as one file chunk
            var chunk = new FileChunk
            {
                Data = buffer,
                FileNameNoPath = newFileNameWithoutPath,
                Offset = 0,
                FirstChunk = true
            };

            await FilesManager.UploadFileChunk(chunk);

            ImageUrl = $"files/{newFileNameWithoutPath}";

            await ListFiles();

            Uploading = false;

        }
        catch (Exception ex)
        {
            Uploading = false;
            await InvokeAsync(StateHasChanged);
            System.Diagnostics.Debug.WriteLine(ex.Message);
            throw;
        }
    }

    async Task ListFiles()
    {
        FileUrls = await FilesManager.GetFileNames();
        await InvokeAsync(StateHasChanged);
    }




#line default
#line hidden
#nullable disable
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private FilesManager FilesManager { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private HttpClient http { get; set; }
    }
}
#pragma warning restore 1591
